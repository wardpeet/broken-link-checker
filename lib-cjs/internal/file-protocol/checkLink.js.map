{"version":3,"file":"checkLink.js","names":["_Link","require","_promises","_default","link","isDirectory","statFile","get","REBASED_URL","pathname","exclude","mend","code","break","exports","default","module"],"sources":["../../../lib/internal/file-protocol/checkLink.js"],"sourcesContent":["import {REBASED_URL} from \"../Link\";\nimport {stat as statFile} from \"fs/promises\";\n\n\n\n/**\n * Check a link on the local file system.\n * @param {Link} link\n * @returns {Promise<Link>}\n */\nexport default async link =>\n{\n\ttry\n\t{\n\t\tconst {isDirectory} = await statFile(link.get(REBASED_URL).pathname);\n\n\t\tif (isDirectory())\n\t\t{\n\t\t\tlink.exclude(\"BLC_DIRECTORY\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlink.mend();\n\t\t}\n\t}\n\t// @todo possible that a `Link` method could fail; then set BLC_UNKNOWN ?\n\tcatch ({code})\n\t{\n\t\tlink.break(`ERRNO_${code}`);\n\t}\n\n\treturn link;\n};\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,SAAA,GAAAD,OAAA;AAIA;AACA;AACA;AACA;AACA;AAJA,IAAAE,QAAA,GAKe,MAAMC,IAAI,IACzB;EACC,IACA;IACC,MAAM;MAACC;IAAW,CAAC,GAAG,MAAM,IAAAC,cAAQ,EAACF,IAAI,CAACG,GAAG,CAACC,iBAAW,CAAC,CAACC,QAAQ,CAAC;IAEpE,IAAIJ,WAAW,CAAC,CAAC,EACjB;MACCD,IAAI,CAACM,OAAO,CAAC,eAAe,CAAC;IAC9B,CAAC,MAED;MACCN,IAAI,CAACO,IAAI,CAAC,CAAC;IACZ;EACD;EACA;EACA,OAAO;IAACC;EAAI,CAAC,EACb;IACCR,IAAI,CAACS,KAAK,CAAC,SAASD,IAAI,EAAE,CAAC;EAC5B;EAEA,OAAOR,IAAI;AACZ,CAAC;AAAAU,OAAA,CAAAC,OAAA,GAAAZ,QAAA;AAAAa,MAAA,CAAAF,OAAA,GAAAA,OAAA,CAAAC,OAAA","ignoreList":[]}