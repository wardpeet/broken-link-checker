{"version":3,"file":"request.js","names":["_reasons","require","_httpMethodsConstants","_isurl","_interopRequireDefault","_got","e","__esModule","default","ERROR_EVENT","REDIRECT_EVENT","RESPONSE_EVENT","createRequest","url","auth","method","options","isRetry","Promise","resolve","reject","redirects","resp","got","stringifyAuth","headers","userAgent","rejectUnauthorized","retry","throwHttpErrors","response","simplifyResponse","stream","Readable","from","body","statusCode","statusMessage","status","statusText","URL","password","username","_default","cache","isURL","TypeError","BLC_INVALID","promise","cacheResponses","cachedPromise","then","set","forEach","redirect","i","subsequentRedirects","slice","catch","error","exports","module"],"sources":["../../../lib/internal/http-protocol/request.js"],"sourcesContent":["import {BLC_INVALID} from \"../reasons\";\nimport {GET, HEAD} from \"http-methods-constants\";\nimport isURL from \"isurl\";\nimport got from \"got\";\n\n\n\nconst ERROR_EVENT = \"error\";\nconst REDIRECT_EVENT = \"redirect\";\nconst RESPONSE_EVENT = \"response\";\n\n\n\n/**\n * Create an HTTP request.\n * @param {URL} url\n * @param {object} auth\n * @param {string} method\n * @param {object} options\n * @param {boolean} [isRetry]\n * @returns {Promise<object>}\n */\nconst createRequest = (url, auth, method, options, isRetry=false) => new Promise(async (resolve, reject) =>\n{\n\tconst redirects = [];\n\tconst resp = await got(url, {\n\t\tauth: stringifyAuth(url, auth),\n\t\theaders: {\n\t\t\t\"user-agent\": options.userAgent,\n\t\t},\n\t\tmethod,\n\t\trejectUnauthorized: false,\n\t\t// accept self-signed SSL certificates\n\t\tretry: 0,\n\t\tthrowHttpErrors: false,\n\t});\n\tconst response = simplifyResponse(resp, redirects);\n\n\treturn resolve({\n\t\tresponse,\n\t\tstream: require(\"stream\").Readable.from(resp.body),\n\t});\n});\n\n\n\n/**\n * Create a simple response object from that of the \"http\" module.\n * @param {object|Stream} response\n * @param {Array<object>} [redirects]\n * @returns {object}\n * @todo add response time -- https://github.com/sindresorhus/got/issues/874\n */\nconst simplifyResponse = ({headers, statusCode, statusMessage, url}, redirects) =>\n({\n\theaders,\n\tstatus: statusCode,\n\tstatusText: statusMessage,\n\turl: new URL(url),\n\t...(redirects && {redirects}) // only return/destructure object if value is truthy\n});\n\n\n\n/**\n * Convert an HTTP authentication URL or object into a string.\n * @param {URL} url\n * @param {object} auth\n * @returns {string}\n */\nconst stringifyAuth = (url, auth) =>\n{\n\tif (url.password!==\"\" || url.username!==\"\")\n\t{\n\t\treturn `${url.username}:${url.password}`;\n\t}\n\telse if (auth.password!==\"\" || auth.username!==\"\")\n\t{\n\t\treturn `${auth.username}:${auth.password}`;\n\t}\n};\n\n\n\n/**\n * Create an HTTP request and optionally cache the response.\n * @param {URL} url\n * @param {object} auth\n * @param {string} method\n * @param {URLCache} cache\n * @param {object} options\n * @throws {TypeError} non-URL\n * @returns {Promise<object>}\n * @todo use `Promise.try()` instead of `async`\n */\nexport default async (url, auth, method, cache, options) =>\n{\n\tif (!isURL(url))\n\t{\n\t\tthrow new TypeError(BLC_INVALID);\n\t}\n\telse\n\t{\n\t\tconst promise = createRequest(url, auth, method, options);\n\n\t\tif (options.cacheResponses)\n\t\t{\n\t\t\tconst cachedPromise = promise\n\t\t\t.then(({response}) =>\n\t\t\t{\n\t\t\t\t// Replace cached promise\n\t\t\t\t// @todo store in a \"response\" key, so that we can also store a list of all element IDs in the document\n\t\t\t\tcache.set(url, response);\n\n\t\t\t\t// Any final redirect\n\t\t\t\t// @todo store in a \"response\" key, so that we can also store a list of all element IDs in the document\n\t\t\t\tcache.set(response.url, response);\n\n\t\t\t\t// Any intermediary redirects\n\t\t\t\tresponse.redirects.forEach((redirect, i) =>\n\t\t\t\t{\n\t\t\t\t\tconst subsequentRedirects = response.redirects.slice(i + 1);\n\n\t\t\t\t\t// @todo store in a \"response\" key, so that we can also store a list of all element IDs in the document\n\t\t\t\t\tcache.set(redirect.url, {...response, redirects:subsequentRedirects});\n\t\t\t\t});\n\n\t\t\t\treturn response;\n\t\t\t})\n\t\t\t.catch(error => error);  // pass-through\n\n\t\t\t// Make future response available to other requests before completion\n\t\t\t// Will always overwrite previous value\n\t\t\t// @todo store in a \"response\" key, so that we can also store a list of all element IDs in the document\n\t\t\tcache.set(url, cachedPromise);\n\t\t}\n\n\t\treturn promise;\n\t}\n};\n"],"mappings":"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","ignoreList":[]}